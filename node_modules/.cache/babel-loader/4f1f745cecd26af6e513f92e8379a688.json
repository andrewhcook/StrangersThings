{"ast":null,"code":"const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\nconst makeHeaders = token => {\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  return headers;\n};\nexport const apiCall = async function (endpoint) {\n  let defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    token,\n    method,\n    body\n  } = defaultOptions;\n  const options = makeHeaders(token);\n  if (method) {\n    options.method = method;\n  }\n  ;\n  if (body) {\n    options.body = JSON.stringify(body);\n  }\n  const response = await fetch(`${BASEURL}/${endpoint}`, options);\n  const result = await response.json();\n  return result;\n};\nexport const fetchPosts = async () => {\n  const {\n    success,\n    error,\n    data\n  } = await apiCall('posts');\n  if (success) {\n    return {\n      error: null,\n      posts: data.posts\n    };\n  } else {\n    return {\n      error: \"Failed to Load apiCall in fetchPosts\",\n      posts: []\n    };\n  }\n};","map":{"version":3,"names":["BASEURL","makeHeaders","token","headers","apiCall","endpoint","defaultOptions","method","body","options","JSON","stringify","response","fetch","result","json","fetchPosts","success","error","data","posts"],"sources":["/home/ahc/Bootcamp2022UBUNTU/course_work/StrangersThings/src/api/Requests.js"],"sourcesContent":["\n\n\nconst BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\n\n\n\n\nconst makeHeaders = (token) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  return headers;\n};\n\nexport const apiCall = async (endpoint, defaultOptions= {}) => {\n  const {token, method, body} = defaultOptions;\n  const options = makeHeaders(token);\n  if (method) {\n    options.method = method;\n  };\n  if (body) {\n    options.body = JSON.stringify(body);\n  }\n    \n    const response = await fetch(`${BASEURL}/${endpoint}`, options);\n    const result = await response.json();\n    \n    return result;\n}\n\nexport const fetchPosts = async ()=> {\n  const {success, error, data} = await apiCall('posts');\n  if (success) {\n    return {\n      error: null,\n      posts: data.posts\n    }\n  } else {\n    return {\n      error: \"Failed to Load apiCall in fetchPosts\",\n      posts: []\n    }\n  }\n\n  \n}\n\n"],"mappings":"AAGA,MAAMA,OAAO,GAAG,+DAA+D;AAK/E,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;EAED,IAAID,KAAK,EAAE;IACTC,OAAO,CAAC,eAAe,CAAC,GAAI,UAASD,KAAM,EAAC;EAC9C;EAEA,OAAOC,OAAO;AAChB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,gBAAOC,QAAQ,EAAyB;EAAA,IAAvBC,cAAc,uEAAE,CAAC,CAAC;EACxD,MAAM;IAACJ,KAAK;IAAEK,MAAM;IAAEC;EAAI,CAAC,GAAGF,cAAc;EAC5C,MAAMG,OAAO,GAAGR,WAAW,CAACC,KAAK,CAAC;EAClC,IAAIK,MAAM,EAAE;IACVE,OAAO,CAACF,MAAM,GAAGA,MAAM;EACzB;EAAC;EACD,IAAIC,IAAI,EAAE;IACRC,OAAO,CAACD,IAAI,GAAGE,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;EACrC;EAEE,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,OAAQ,IAAGK,QAAS,EAAC,EAAEI,OAAO,CAAC;EAC/D,MAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAEpC,OAAOD,MAAM;AACjB,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,YAAW;EACnC,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAG,MAAMf,OAAO,CAAC,OAAO,CAAC;EACrD,IAAIa,OAAO,EAAE;IACX,OAAO;MACLC,KAAK,EAAE,IAAI;MACXE,KAAK,EAAED,IAAI,CAACC;IACd,CAAC;EACH,CAAC,MAAM;IACL,OAAO;MACLF,KAAK,EAAE,sCAAsC;MAC7CE,KAAK,EAAE;IACT,CAAC;EACH;AAGF,CAAC"},"metadata":{},"sourceType":"module"}